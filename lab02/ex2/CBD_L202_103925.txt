// NMEC: 103925

// 1. Liste todos os documentos da coleção.
db.restaurants.find()
// 3772 resultados


// 2. Apresente os campos restaurant_id, nome, localidade e gastronomia para todos os documentos da coleção.
db.restaurants.find( {}, { restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1 } )
// 3772 resultados


// 3. Apresente os campos restaurant_id, nome, localidade e código postal (zipcode), mas exclua o campo _id de todos os documentos da coleção.
db.restaurants.find( {}, { restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1, _id: 0 } )
// 3772 resultados


// 4. Indique o total de restaurantes localizados no Bronx.
db.restaurants.find( {localidade: "Bronx"}, { restaurant_id: 1, nome: 1, localidade: 1} )
// 309 resultados


// 5. Apresente os primeiros 15 restaurantes localizados no Bronx, ordenados por ordem crescente de nome.
db.restaurants.find({localidade: "Bronx"}, { restaurant_id: 1, nome: 1, localidade: 1}).sort({nome:1}).limit(15)
// 15 resultados


// 6. Liste todos os restaurantes que tenham pelo menos um score superior a 85.
db.restaurants.find({ grades: { $elemMatch: { score: { $gt: 85} } }})
// 4 resultados


// 7. Encontre os restaurantes que obtiveram uma ou mais pontuações (score) entre [80 e 100].
db.restaurants.find({ grades: { $elemMatch: { score: { $gt: 85, $lte: 100 } } }})
// 3 resultados


// 8. Indique os restaurantes com latitude inferior a -95,7.
db.restaurants.find({"address.coord.1": {$lte: -95.7}})
// --- Como nao deu nenhum resultado, considerei a altitude em vez da latitude:
db.restaurants.find({"address.coord.0": {$lte: -95.7}})
// 3 resultados


// 9. Indique os restaurantes que não têm gastronomia "American", tiveram uma (ou mais) pontuação superior a 70 e estão numa latitude inferior a -65.
db.restaurants.find({gastronomia: {$ne: 'American'}, grades: {$elemMatch: {score: {$gt: 70}}}, "address.coord.0": {$lte: -65}})
// 5 resultados


// 10. Liste o restaurant_id, o nome, a localidade e gastronomia dos restaurantes cujo nome começam por "Wil".
db.restaurants.find({nome: {$regex: '(?i)Wil'}}, {restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1})
// 4 resultados


// 11. Liste o nome, a localidade e a gastronomia dos restaurantes que pertencem ao Bronx e cuja gastronomia é do tipo "American" ou "Chinese".
db.restaurants.find( {localidade: "Bronx", $or: [{gastronomia: "American"}, {gastronomia: "Chinese"}]}, { nome: 1, localidade: 1, gastronomia: 1, _id: 0 } )
// 91 resultados


// 12. Liste o restaurant_id, o nome, a localidade e a gastronomia dos restaurantes localizados em "Staten Island", "Queens", ou "Brooklyn".
db.restaurants.find( {$or: [{localidade: "Staten Island"}, {localidade: "Queens"}, {localidade: "Brooklyn"} ]}, {restaurant_id:1, nome: 1, localidade: 1, gastronomia: 1, _id: 0 } )
// 1580 resultados


// 13. Liste o nome, a localidade, o score e gastronomia dos restaurantes que alcançaram sempre pontuações inferiores ou igual a 3.
db.restaurants.find({'grades.score': {$not: {$gt: 3}}}, {nome: 1, localidade: 1, 'grades.score':1, gastronomia: 1})
// 7 resultados


// 14. Liste o nome e as avaliações dos restaurantes que obtiveram uma avaliação com um grade "A", um score 10 na data "2014-08-11T00: 00: 00Z" (ISODATE).
db.restaurants.find({grades: {$elemMatch: {grade: "A", score: 10, date: ISODate("2014-08-11T00:00:00Z")}}}, {nome:1, 'grades.grade': 1})
// 6 resultados


// 15. Liste o restaurant_id, o nome e os score dos restaurantes nos quais a segunda avaliação foi grade "A" e ocorreu em ISODATE "2014-08-11T00: 00: 00Z".
db.restaurants.find( {'grades.1.grade' :'A', 'grades.1.date' : ISODate("2014-08-11T00:00:00Z") }, {restaurant_id : 1, nome : 1, 'grades.score' : 1})
// 2 resultados


// 16. Liste o restaurant_id, o nome, o endereço (address) e as coordenadas geográficas (coord) dos restaurantes onde o 2º elemento da matriz de coordenadas tem um valor superior a 42 e inferior ou igual a 52.
db.restaurants.find({"address.coord.1": {$gt: 42}, "address.coord.1": {$lt: 53}}, {restaurant_id:1, nome:1, "address.coord": 1})
// 3772 resultados


// 17. Liste nome, gastronomia e localidade de todos os restaurantes ordenando por ordem crescente da gastronomia e, em segundo, por ordem decrescente de localidade.
db.restaurants.find({}, { nome : 1, gastronomia : 1, localidade : 1}).sort({gastronomia : 1, localidade : -1})
// 3772 resultados


// 18. Liste nome, localidade, grade e gastronomia de todos os restaurantes localizados em Brooklyn que não incluem gastronomia "American" e obtiveram uma classificação (grade) "A". Deve apresentá-los por ordem decrescente de gastronomia.
db.restaurants.find( {localidade : 'Brooklyn', gastronomia : {$ne : 'American'}, 'grades.grade' : 'A'}, {nome : 1, localidade : 1, 'grades.grade' : 1, gastronomia : 1}).sort({gastronomia : -1}) 
// 492 resultados


// 19. Conte o total de restaurante existentes em cada localidade.
db.restaurants.aggregate([ {$group : { _id : '$localidade', "total de restaurantes" : {$sum : 1} }} ])
// 5 resultados


// 20. Liste todos os restaurantes cuja média dos score é superior a 30.
db.restaurants.aggregate([{ $addFields : { mediaDosScore :  {$avg : '$grades.score'} } }, { $match : {mediaDosScore: {$gt : 30} }} ])
// 8 resultados


// 21. Indique os restaurantes que têm gastronomia "Portuguese", o somatório de score é superior a 50 e estão numa latitude inferior a -60.
db.restaurants.aggregate([{ $addFields : { sumScore :  {$sum : '$grades.score'}}}, { $match : {sumScore: {$gt: 50}, gastronomia: 'Portuguese', 'address.coord.0': {$lt: -60} }}])
// 2 resultados


// 22. Apresente o nome e o score dos 3 restaurantes com score médio mais elevado.
db.restaurants.aggregate([{$addFields : {score: {$avg : "$grades.score"} }}, {$sort : {score : -1}}, {$limit : 3}, {$project : {nome : 1, score : 1} }])
// 3 resultados


// 23. Apresente o número de gastronomias diferentes na rua "Fifth Avenue"
db.restaurants.aggregate([{$match : {'address.rua' : 'Fifth Avenue' }}, {$group : {'_id' : '$gastronomia'}}, {$count : "no_gastronomy"}])                            
// 4 resultados


// 24. Conte quantos restaurantes existem por rua e ordene por ordem decrescente
db.restaurants.aggregate([{ $group : { _id : '$address.rua', countRestaurants : {$sum : 1}}}, { $sort: {countRestaurants: -1}}])
// 980


// 25. .. 30. Descreva 5 perguntas adicionais à base dados (alíneas 26 a 30), significativamente distintas das anteriores, e apresente igualmente a solução de pesquisa para cada questão.

//
